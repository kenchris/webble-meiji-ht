{"version":3,"file":"mwc-list.js","sources":["../../node_modules/@material/mwc-list/node_modules/@material/dom/ponyfill.js","../../node_modules/@material/mwc-list/node_modules/@material/mwc-base/utils.js","../../node_modules/@material/mwc-list/node_modules/@material/mwc-base/base-element.js","../../node_modules/@material/mwc-list/node_modules/@material/base/foundation.js","../../node_modules/@material/mwc-list/node_modules/@material/list/constants.js","../../node_modules/@material/mwc-list/mwc-list-foundation.js","../../node_modules/@material/mwc-list/mwc-list-base.js","../../node_modules/@material/mwc-list/mwc-list-css.js","../../node_modules/@material/mwc-list/mwc-list.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\nexport function closest(element, selector) {\n    if (element.closest) {\n        return element.closest(selector);\n    }\n    var el = element;\n    while (el) {\n        if (matches(el, selector)) {\n            return el;\n        }\n        el = el.parentElement;\n    }\n    return null;\n}\nexport function matches(element, selector) {\n    var nativeMatches = element.matches\n        || element.webkitMatchesSelector\n        || element.msMatchesSelector;\n    return nativeMatches.call(element, selector);\n}\n/**\n * Used to compute the estimated scroll width of elements. When an element is\n * hidden due to display: none; being applied to a parent element, the width is\n * returned as 0. However, the element will have a true width once no longer\n * inside a display: none context. This method computes an estimated width when\n * the element is hidden or returns the true width when the element is visble.\n * @param {Element} element the element whose width to estimate\n */\nexport function estimateScrollWidth(element) {\n    // Check the offsetParent. If the element inherits display: none from any\n    // parent, the offsetParent property will be null (see\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n    // This check ensures we only clone the node when necessary.\n    var htmlEl = element;\n    if (htmlEl.offsetParent !== null) {\n        return htmlEl.scrollWidth;\n    }\n    var clone = htmlEl.cloneNode(true);\n    clone.style.setProperty('position', 'absolute');\n    clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n    document.documentElement.appendChild(clone);\n    var scrollWidth = clone.scrollWidth;\n    document.documentElement.removeChild(clone);\n    return scrollWidth;\n}\n//# sourceMappingURL=ponyfill.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Return an element assigned to a given slot that matches the given selector\n */\nimport { matches } from '@material/dom/ponyfill';\n/**\n * Determines whether a node is an element.\n *\n * @param node Node to check\n */\nexport const isNodeElement = (node) => {\n    return node.nodeType === Node.ELEMENT_NODE;\n};\nexport function findAssignedElement(slot, selector) {\n    for (const node of slot.assignedNodes({ flatten: true })) {\n        if (isNodeElement(node)) {\n            const el = node;\n            if (matches(el, selector)) {\n                return el;\n            }\n        }\n    }\n    return null;\n}\nexport function addHasRemoveClass(element) {\n    return {\n        addClass: (className) => {\n            element.classList.add(className);\n        },\n        removeClass: (className) => {\n            element.classList.remove(className);\n        },\n        hasClass: (className) => element.classList.contains(className),\n    };\n}\nlet supportsPassive = false;\nconst fn = () => { };\nconst optionsBlock = {\n    get passive() {\n        supportsPassive = true;\n        return false;\n    }\n};\ndocument.addEventListener('x', fn, optionsBlock);\ndocument.removeEventListener('x', fn);\n/**\n * Do event listeners suport the `passive` option?\n */\nexport const supportsPassiveEventListener = supportsPassive;\nexport const deepActiveElementPath = (doc = window.document) => {\n    let activeElement = doc.activeElement;\n    const path = [];\n    if (!activeElement) {\n        return path;\n    }\n    while (activeElement) {\n        path.push(activeElement);\n        if (activeElement.shadowRoot) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        else {\n            break;\n        }\n    }\n    return path;\n};\nexport const doesElementContainFocus = (element) => {\n    const activePath = deepActiveElementPath();\n    if (!activePath.length) {\n        return false;\n    }\n    const deepActiveElement = activePath[activePath.length - 1];\n    const focusEv = new Event('check-if-focused', { bubbles: true, composed: true });\n    let composedPath = [];\n    const listener = (ev) => {\n        composedPath = ev.composedPath();\n    };\n    document.body.addEventListener('check-if-focused', listener);\n    deepActiveElement.dispatchEvent(focusEv);\n    document.body.removeEventListener('check-if-focused', listener);\n    return composedPath.indexOf(element) !== -1;\n};\n//# sourceMappingURL=utils.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { LitElement } from 'lit-element';\nexport { observer } from './observer.js';\nexport { addHasRemoveClass } from './utils.js';\nexport class BaseElement extends LitElement {\n    /**\n     * Create and attach the MDC Foundation to the instance\n     */\n    createFoundation() {\n        if (this.mdcFoundation !== undefined) {\n            this.mdcFoundation.destroy();\n        }\n        this.mdcFoundation = new this.mdcFoundationClass(this.createAdapter());\n        this.mdcFoundation.init();\n    }\n    firstUpdated() {\n        this.createFoundation();\n    }\n}\n//# sourceMappingURL=base-element.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCFoundation = /** @class */ (function () {\n    function MDCFoundation(adapter) {\n        if (adapter === void 0) { adapter = {}; }\n        this.adapter_ = adapter;\n    }\n    Object.defineProperty(MDCFoundation, \"cssClasses\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports every\n            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"strings\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"numbers\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"defaultAdapter\", {\n        get: function () {\n            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n            // validation.\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCFoundation.prototype.init = function () {\n        // Subclasses should override this method to perform initialization routines (registering events, etc.)\n    };\n    MDCFoundation.prototype.destroy = function () {\n        // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n    };\n    return MDCFoundation;\n}());\nexport { MDCFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n    LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n    LIST_ITEM_CLASS: 'mdc-list-item',\n    LIST_ITEM_DISABLED_CLASS: 'mdc-list-item--disabled',\n    LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n    ROOT: 'mdc-list',\n};\nvar strings = {\n    ACTION_EVENT: 'MDCList:action',\n    ARIA_CHECKED: 'aria-checked',\n    ARIA_CHECKED_CHECKBOX_SELECTOR: '[role=\"checkbox\"][aria-checked=\"true\"]',\n    ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n    ARIA_CURRENT: 'aria-current',\n    ARIA_DISABLED: 'aria-disabled',\n    ARIA_ORIENTATION: 'aria-orientation',\n    ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n    ARIA_ROLE_CHECKBOX_SELECTOR: '[role=\"checkbox\"]',\n    ARIA_SELECTED: 'aria-selected',\n    CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]',\n    CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: \"\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" button:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" a\\n  \",\n    FOCUSABLE_CHILD_ELEMENTS: \"\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" button:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" a,\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" input[type=\\\"radio\\\"]:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" input[type=\\\"checkbox\\\"]:not(:disabled)\\n  \",\n    RADIO_SELECTOR: 'input[type=\"radio\"]',\n};\nvar numbers = {\n    UNSET_INDEX: -1,\n};\nexport { strings, cssClasses, numbers };\n//# sourceMappingURL=constants.js.map","/**\n @license\n Copyright 2020 Google Inc. All Rights Reserved.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\nimport { MDCFoundation } from '@material/base/foundation';\nimport { numbers, strings } from '@material/list/constants';\nconst findIndexDiff = (oldSet, newSet) => {\n    const oldArr = Array.from(oldSet);\n    const newArr = Array.from(newSet);\n    const diff = { added: [], removed: [] };\n    const oldSorted = oldArr.sort();\n    const newSorted = newArr.sort();\n    let i = 0;\n    let j = 0;\n    while (i < oldSorted.length || j < newSorted.length) {\n        const oldVal = oldSorted[i];\n        const newVal = newSorted[j];\n        if (oldVal === newVal) {\n            i++;\n            j++;\n            continue;\n        }\n        if (oldVal !== undefined && (newVal === undefined || oldVal < newVal)) {\n            diff.removed.push(oldVal);\n            i++;\n            continue;\n        }\n        if (newVal !== undefined && (oldVal === undefined || newVal < oldVal)) {\n            diff.added.push(newVal);\n            j++;\n            continue;\n        }\n    }\n    return diff;\n};\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\nexport function isIndexSet(selectedIndex) {\n    return selectedIndex instanceof Set;\n}\nexport function isEventMulti(evt) {\n    return isIndexSet(evt.detail.index);\n}\nexport const createSetFromIndex = (index) => {\n    const entry = index === numbers.UNSET_INDEX ? new Set() : index;\n    return isIndexSet(entry) ? new Set(entry) : new Set([entry]);\n};\nexport class MDCListFoundation extends MDCFoundation {\n    constructor(adapter) {\n        super(Object.assign(Object.assign({}, MDCListFoundation.defaultAdapter), adapter));\n        this.isMulti_ = false;\n        this.wrapFocus_ = false;\n        this.isVertical_ = true;\n        this.selectedIndex_ = numbers.UNSET_INDEX;\n        this.focusedItemIndex_ = numbers.UNSET_INDEX;\n        this.useActivatedClass_ = false;\n        this.ariaCurrentAttrValue_ = null;\n    }\n    static get strings() {\n        return strings;\n    }\n    static get numbers() {\n        return numbers;\n    }\n    static get defaultAdapter() {\n        return {\n            focusItemAtIndex: () => undefined,\n            getFocusedElementIndex: () => 0,\n            getListItemCount: () => 0,\n            isFocusInsideList: () => false,\n            isRootFocused: () => false,\n            notifyAction: () => undefined,\n            notifySelected: () => undefined,\n            getSelectedStateForElementIndex: () => false,\n            setDisabledStateForElementIndex: () => undefined,\n            getDisabledStateForElementIndex: () => false,\n            setSelectedStateForElementIndex: () => undefined,\n            setActivatedStateForElementIndex: () => undefined,\n            setTabIndexForElementIndex: () => undefined,\n            setAttributeForElementIndex: () => undefined,\n            getAttributeForElementIndex: () => null,\n        };\n    }\n    /**\n     * Sets the private wrapFocus_ variable.\n     */\n    setWrapFocus(value) {\n        this.wrapFocus_ = value;\n    }\n    /**\n     * Sets the private wrapFocus_ variable.\n     */\n    setMulti(value) {\n        this.isMulti_ = value;\n    }\n    /**\n     * Sets the isVertical_ private variable.\n     */\n    setVerticalOrientation(value) {\n        this.isVertical_ = value;\n    }\n    /**\n     * Sets the useActivatedClass_ private variable.\n     */\n    setUseActivatedClass(useActivated) {\n        this.useActivatedClass_ = useActivated;\n    }\n    getSelectedIndex() {\n        return this.selectedIndex_;\n    }\n    setSelectedIndex(index) {\n        if (!this.isIndexValid_(index)) {\n            return;\n        }\n        if (this.isMulti_) {\n            this.setMultiSelectionAtIndex_(createSetFromIndex(index));\n        }\n        else {\n            this.setSingleSelectionAtIndex_(index);\n        }\n    }\n    /**\n     * Focus in handler for the list items.\n     */\n    handleFocusIn(_, listItemIndex) {\n        if (listItemIndex >= 0) {\n            this.adapter_.setTabIndexForElementIndex(listItemIndex, 0);\n        }\n    }\n    /**\n     * Focus out handler for the list items.\n     */\n    handleFocusOut(_, listItemIndex) {\n        if (listItemIndex >= 0) {\n            this.adapter_.setTabIndexForElementIndex(listItemIndex, -1);\n        }\n        /**\n         * Between Focusout & Focusin some browsers do not have focus on any\n         * element. Setting a delay to wait till the focus is moved to next element.\n         */\n        setTimeout(() => {\n            if (!this.adapter_.isFocusInsideList()) {\n                this.setTabindexToFirstSelectedItem_();\n            }\n        }, 0);\n    }\n    /**\n     * Key handler for the list.\n     */\n    handleKeydown(evt, isRootListItem, listItemIndex) {\n        const isArrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;\n        const isArrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;\n        const isArrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;\n        const isArrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;\n        const isHome = evt.key === 'Home' || evt.keyCode === 36;\n        const isEnd = evt.key === 'End' || evt.keyCode === 35;\n        const isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n        const isSpace = evt.key === 'Space' || evt.keyCode === 32;\n        if (this.adapter_.isRootFocused()) {\n            if (isArrowUp || isEnd) {\n                evt.preventDefault();\n                this.focusLastElement();\n            }\n            else if (isArrowDown || isHome) {\n                evt.preventDefault();\n                this.focusFirstElement();\n            }\n            return;\n        }\n        let currentIndex = this.adapter_.getFocusedElementIndex();\n        if (currentIndex === -1) {\n            currentIndex = listItemIndex;\n            if (currentIndex < 0) {\n                // If this event doesn't have a mdc-list-item ancestor from the\n                // current list (not from a sublist), return early.\n                return;\n            }\n        }\n        let nextIndex;\n        if ((this.isVertical_ && isArrowDown) ||\n            (!this.isVertical_ && isArrowRight)) {\n            this.preventDefaultEvent_(evt);\n            nextIndex = this.focusNextElement(currentIndex);\n        }\n        else if ((this.isVertical_ && isArrowUp) || (!this.isVertical_ && isArrowLeft)) {\n            this.preventDefaultEvent_(evt);\n            nextIndex = this.focusPrevElement(currentIndex);\n        }\n        else if (isHome) {\n            this.preventDefaultEvent_(evt);\n            nextIndex = this.focusFirstElement();\n        }\n        else if (isEnd) {\n            this.preventDefaultEvent_(evt);\n            nextIndex = this.focusLastElement();\n        }\n        else if (isEnter || isSpace) {\n            if (isRootListItem) {\n                // Return early if enter key is pressed on anchor element which triggers\n                // synthetic MouseEvent event.\n                const target = evt.target;\n                if (target && target.tagName === 'A' && isEnter) {\n                    return;\n                }\n                this.preventDefaultEvent_(evt);\n                this.setSelectedIndexOnAction_(currentIndex);\n            }\n        }\n        this.focusedItemIndex_ = currentIndex;\n        if (nextIndex !== undefined) {\n            this.setTabindexAtIndex_(nextIndex);\n            this.focusedItemIndex_ = nextIndex;\n        }\n    }\n    /**\n     * Click handler for the list.\n     */\n    handleSingleSelection(index, force) {\n        if (index === numbers.UNSET_INDEX) {\n            return;\n        }\n        this.setSelectedIndexOnAction_(index, force);\n        this.setTabindexAtIndex_(index);\n        this.focusedItemIndex_ = index;\n    }\n    /**\n     * Focuses the next element on the list.\n     */\n    focusNextElement(index) {\n        const count = this.adapter_.getListItemCount();\n        let nextIndex = index + 1;\n        if (nextIndex >= count) {\n            if (this.wrapFocus_) {\n                nextIndex = 0;\n            }\n            else {\n                // Return early because last item is already focused.\n                return index;\n            }\n        }\n        this.adapter_.focusItemAtIndex(nextIndex);\n        return nextIndex;\n    }\n    /**\n     * Focuses the previous element on the list.\n     */\n    focusPrevElement(index) {\n        let prevIndex = index - 1;\n        if (prevIndex < 0) {\n            if (this.wrapFocus_) {\n                prevIndex = this.adapter_.getListItemCount() - 1;\n            }\n            else {\n                // Return early because first item is already focused.\n                return index;\n            }\n        }\n        this.adapter_.focusItemAtIndex(prevIndex);\n        return prevIndex;\n    }\n    focusFirstElement() {\n        this.adapter_.focusItemAtIndex(0);\n        return 0;\n    }\n    focusLastElement() {\n        const lastIndex = this.adapter_.getListItemCount() - 1;\n        this.adapter_.focusItemAtIndex(lastIndex);\n        return lastIndex;\n    }\n    /**\n     * @param itemIndex Index of the list item\n     * @param isEnabled Sets the list item to enabled or disabled.\n     */\n    setEnabled(itemIndex, isEnabled) {\n        if (!this.isIndexValid_(itemIndex)) {\n            return;\n        }\n        this.adapter_.setDisabledStateForElementIndex(itemIndex, !isEnabled);\n    }\n    /**\n     * Ensures that preventDefault is only called if the containing element\n     * doesn't consume the event, and it will cause an unintended scroll.\n     */\n    preventDefaultEvent_(evt) {\n        const target = evt.target;\n        const tagName = `${target.tagName}`.toLowerCase();\n        if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n            evt.preventDefault();\n        }\n    }\n    setSingleSelectionAtIndex_(index) {\n        if (this.selectedIndex_ === index) {\n            return;\n        }\n        // unset previous\n        if (this.selectedIndex_ !== numbers.UNSET_INDEX) {\n            this.adapter_.setSelectedStateForElementIndex(this.selectedIndex_, false);\n            if (this.useActivatedClass_) {\n                this.adapter_.setActivatedStateForElementIndex(this.selectedIndex_, false);\n            }\n        }\n        // set new\n        this.adapter_.setSelectedStateForElementIndex(index, true);\n        if (this.useActivatedClass_) {\n            this.adapter_.setActivatedStateForElementIndex(index, true);\n        }\n        this.setAriaForSingleSelectionAtIndex_(index);\n        this.selectedIndex_ = index;\n        this.adapter_.notifySelected(index);\n    }\n    setMultiSelectionAtIndex_(newIndex) {\n        const oldIndex = createSetFromIndex(this.selectedIndex_);\n        const diff = findIndexDiff(oldIndex, newIndex);\n        if (!diff.removed.length && !diff.added.length) {\n            return;\n        }\n        for (const removed of diff.removed) {\n            this.adapter_.setSelectedStateForElementIndex(removed, false);\n            if (this.useActivatedClass_) {\n                this.adapter_.setActivatedStateForElementIndex(removed, false);\n            }\n        }\n        for (const added of diff.added) {\n            this.adapter_.setSelectedStateForElementIndex(added, true);\n            if (this.useActivatedClass_) {\n                this.adapter_.setActivatedStateForElementIndex(added, true);\n            }\n        }\n        this.selectedIndex_ = newIndex;\n        this.adapter_.notifySelected(newIndex, diff);\n    }\n    /**\n     * Sets aria attribute for single selection at given index.\n     */\n    setAriaForSingleSelectionAtIndex_(index) {\n        // Detect the presence of aria-current and get the value only during list\n        // initialization when it is in unset state.\n        if (this.selectedIndex_ === numbers.UNSET_INDEX) {\n            this.ariaCurrentAttrValue_ = this.adapter_.getAttributeForElementIndex(index, strings.ARIA_CURRENT);\n        }\n        const isAriaCurrent = this.ariaCurrentAttrValue_ !== null;\n        const ariaAttribute = isAriaCurrent ? strings.ARIA_CURRENT : strings.ARIA_SELECTED;\n        if (this.selectedIndex_ !== numbers.UNSET_INDEX) {\n            this.adapter_.setAttributeForElementIndex(this.selectedIndex_, ariaAttribute, 'false');\n        }\n        const ariaAttributeValue = isAriaCurrent ? this.ariaCurrentAttrValue_ : 'true';\n        this.adapter_.setAttributeForElementIndex(index, ariaAttribute, ariaAttributeValue);\n    }\n    setTabindexAtIndex_(index) {\n        if (this.focusedItemIndex_ === numbers.UNSET_INDEX && index !== 0) {\n            // If no list item was selected set first list item's tabindex to -1.\n            // Generally, tabindex is set to 0 on first list item of list that has no\n            // preselected items.\n            this.adapter_.setTabIndexForElementIndex(0, -1);\n        }\n        else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {\n            this.adapter_.setTabIndexForElementIndex(this.focusedItemIndex_, -1);\n        }\n        this.adapter_.setTabIndexForElementIndex(index, 0);\n    }\n    setTabindexToFirstSelectedItem_() {\n        let targetIndex = 0;\n        if (typeof this.selectedIndex_ === 'number' &&\n            this.selectedIndex_ !== numbers.UNSET_INDEX) {\n            targetIndex = this.selectedIndex_;\n        }\n        else if (isIndexSet(this.selectedIndex_) && this.selectedIndex_.size > 0) {\n            targetIndex = Math.min(...this.selectedIndex_);\n        }\n        this.setTabindexAtIndex_(targetIndex);\n    }\n    isIndexValid_(index) {\n        if (index instanceof Set) {\n            if (!this.isMulti_) {\n                throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');\n            }\n            if (index.size === 0) {\n                return true;\n            }\n            else {\n                let isOneInRange = false;\n                for (const entry of index) {\n                    isOneInRange = this.isIndexInRange_(entry);\n                    if (isOneInRange) {\n                        break;\n                    }\n                }\n                return isOneInRange;\n            }\n        }\n        else if (typeof index === 'number') {\n            if (this.isMulti_) {\n                throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' +\n                    index);\n            }\n            return this.isIndexInRange_(index);\n        }\n        else {\n            return false;\n        }\n    }\n    isIndexInRange_(index) {\n        const listSize = this.adapter_.getListItemCount();\n        return index >= 0 && index < listSize;\n    }\n    /**\n     * Sets selected index on user action, toggles checkbox / radio based on\n     * toggleCheckbox value. User interaction should not toggle list item(s) when\n     * disabled.\n     */\n    setSelectedIndexOnAction_(index, force) {\n        if (this.adapter_.getDisabledStateForElementIndex(index)) {\n            return;\n        }\n        let checkedIndex = index;\n        if (this.isMulti_) {\n            checkedIndex = new Set([index]);\n        }\n        if (!this.isIndexValid_(checkedIndex)) {\n            return;\n        }\n        if (this.isMulti_) {\n            this.toggleMultiAtIndex(index, force);\n        }\n        else {\n            this.setSingleSelectionAtIndex_(index);\n        }\n        this.adapter_.notifyAction(index);\n    }\n    toggleMultiAtIndex(index, force) {\n        let newSelectionValue = false;\n        if (force === undefined) {\n            newSelectionValue = !this.adapter_.getSelectedStateForElementIndex(index);\n        }\n        else {\n            newSelectionValue = force;\n        }\n        const newSet = createSetFromIndex(this.selectedIndex_);\n        if (newSelectionValue) {\n            newSet.add(index);\n        }\n        else {\n            newSet.delete(index);\n        }\n        this.setMultiSelectionAtIndex_(newSet);\n    }\n}\n// tslint:disable-next-line:no-default-export Needed for backward compatibility\n// with MDC Web v0.44.0 and earlier.\nexport default MDCListFoundation;\n//# sourceMappingURL=mwc-list-foundation.js.map","/**\n@license\nCopyright 2020 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { __decorate } from \"tslib\";\nimport { BaseElement, observer } from '@material/mwc-base/base-element.js';\nimport { deepActiveElementPath, doesElementContainFocus, findAssignedElement, isNodeElement } from '@material/mwc-base/utils';\nimport { html, property, query } from 'lit-element';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport MDCListFoundation, { isIndexSet } from './mwc-list-foundation';\nexport { createSetFromIndex, isEventMulti, isIndexSet } from './mwc-list-foundation';\nconst isListItem = (element) => {\n    return element.hasAttribute('mwc-list-item');\n};\n/**\n * @fires selected {SelectedDetail}\n * @fires action {ActionDetail}\n */\nexport class ListBase extends BaseElement {\n    constructor() {\n        super(...arguments);\n        this.mdcAdapter = null;\n        this.mdcFoundationClass = MDCListFoundation;\n        this.activatable = false;\n        this.multi = false;\n        this.wrapFocus = false;\n        this.itemRoles = null;\n        this.innerRole = null;\n        this.rootTabbable = false;\n        this.previousTabindex = null;\n        this.noninteractive = false;\n        this.items_ = [];\n    }\n    get assignedElements() {\n        const slot = this.slotElement;\n        if (slot) {\n            return slot.assignedNodes({ flatten: true }).filter(isNodeElement);\n        }\n        return [];\n    }\n    get items() {\n        return this.items_;\n    }\n    updateItems() {\n        const nodes = this.assignedElements;\n        const listItems = [];\n        for (const node of nodes) {\n            if (isListItem(node)) {\n                listItems.push(node);\n            }\n            if (node.hasAttribute('divider') && !node.hasAttribute('role')) {\n                node.setAttribute('role', 'separator');\n            }\n        }\n        this.items_ = listItems;\n        const selectedIndices = new Set();\n        this.items_.forEach((item, index) => {\n            if (this.itemRoles) {\n                item.setAttribute('role', this.itemRoles);\n            }\n            else {\n                item.removeAttribute('role');\n            }\n            if (item.selected) {\n                selectedIndices.add(index);\n            }\n        });\n        if (this.multi) {\n            this.select(selectedIndices);\n        }\n        else {\n            const index = selectedIndices.size ? selectedIndices.entries().next().value[1] : -1;\n            this.select(index);\n        }\n    }\n    get selected() {\n        const index = this.index;\n        if (!isIndexSet(index)) {\n            if (index === -1) {\n                return null;\n            }\n            return this.items[index];\n        }\n        const selected = [];\n        for (const entry of index) {\n            selected.push(this.items[entry]);\n        }\n        return selected;\n    }\n    get index() {\n        if (this.mdcFoundation) {\n            return this.mdcFoundation.getSelectedIndex();\n        }\n        return -1;\n    }\n    render() {\n        const role = this.innerRole === null ? undefined : this.innerRole;\n        const tabindex = this.rootTabbable ? '0' : '-1';\n        return html `\n      <!-- @ts-ignore -->\n      <ul\n          tabindex=${tabindex}\n          role=\"${ifDefined(role)}\"\n          class=\"mdc-list\"\n          @keydown=${this.onKeydown}\n          @focusin=${this.onFocusIn}\n          @focusout=${this.onFocusOut}\n          @request-selected=${this.onRequestSelected}>\n        <slot\n            @slotchange=${this.onSlotChange}\n            @list-item-rendered=${this.onListItemConnected}>\n        </slot>\n      </ul>\n    `;\n    }\n    onFocusIn(evt) {\n        if (this.mdcFoundation && this.mdcRoot) {\n            const index = this.getIndexOfTarget(evt);\n            this.mdcFoundation.handleFocusIn(evt, index);\n        }\n    }\n    onFocusOut(evt) {\n        if (this.mdcFoundation && this.mdcRoot) {\n            const index = this.getIndexOfTarget(evt);\n            this.mdcFoundation.handleFocusOut(evt, index);\n        }\n    }\n    onKeydown(evt) {\n        if (this.mdcFoundation && this.mdcRoot) {\n            const index = this.getIndexOfTarget(evt);\n            const target = evt.target;\n            const isRootListItem = isListItem(target);\n            this.mdcFoundation.handleKeydown(evt, isRootListItem, index);\n        }\n    }\n    onRequestSelected(evt) {\n        if (this.mdcFoundation) {\n            const index = this.getIndexOfTarget(evt);\n            if (index === -1) {\n                return;\n            }\n            const element = this.items[index];\n            if (element.disabled) {\n                return;\n            }\n            const selected = evt.detail.selected;\n            this.mdcFoundation.handleSingleSelection(index, selected);\n            evt.stopPropagation();\n        }\n    }\n    getIndexOfTarget(evt) {\n        const elements = this.items;\n        const path = evt.composedPath();\n        for (const pathItem of path) {\n            let index = -1;\n            if (isNodeElement(pathItem) && isListItem(pathItem)) {\n                index = elements.indexOf(pathItem);\n            }\n            if (index !== -1) {\n                return index;\n            }\n        }\n        return -1;\n    }\n    createAdapter() {\n        this.mdcAdapter = {\n            getListItemCount: () => {\n                if (this.mdcRoot) {\n                    return this.items.length;\n                }\n                return 0;\n            },\n            getFocusedElementIndex: () => {\n                if (!this.mdcRoot) {\n                    return -1;\n                }\n                if (!this.items.length) {\n                    return -1;\n                }\n                const activeElementPath = deepActiveElementPath();\n                if (!activeElementPath.length) {\n                    return -1;\n                }\n                for (let i = activeElementPath.length - 1; i >= 0; i--) {\n                    const activeItem = activeElementPath[i];\n                    if (isListItem(activeItem)) {\n                        return this.items.indexOf(activeItem);\n                    }\n                }\n                return -1;\n            },\n            getAttributeForElementIndex: (index, attr) => {\n                const listElement = this.mdcRoot;\n                if (!listElement) {\n                    return '';\n                }\n                const element = this.items[index];\n                return element ? element.getAttribute(attr) : '';\n            },\n            setAttributeForElementIndex: (index, attr, val) => {\n                if (!this.mdcRoot) {\n                    return;\n                }\n                const element = this.items[index];\n                if (element) {\n                    element.setAttribute(attr, val);\n                }\n            },\n            focusItemAtIndex: (index) => {\n                const element = this.items[index];\n                if (element) {\n                    element.focus();\n                }\n            },\n            setTabIndexForElementIndex: (index, value) => {\n                const item = this.items[index];\n                if (item) {\n                    item.tabindex = value;\n                }\n            },\n            notifyAction: (index) => {\n                const init = { bubbles: true, composed: true };\n                init.detail = { index };\n                const ev = new CustomEvent('action', init);\n                this.dispatchEvent(ev);\n            },\n            notifySelected: (index, diff) => {\n                const init = { bubbles: true, composed: true };\n                init.detail = { index, diff };\n                const ev = new CustomEvent('selected', init);\n                this.dispatchEvent(ev);\n            },\n            isFocusInsideList: () => {\n                return doesElementContainFocus(this);\n            },\n            isRootFocused: () => {\n                const mdcRoot = this.mdcRoot;\n                const root = mdcRoot.getRootNode();\n                return root.activeElement === mdcRoot;\n            },\n            setDisabledStateForElementIndex: (index, value) => {\n                const item = this.items[index];\n                if (!item) {\n                    return;\n                }\n                item.disabled = value;\n            },\n            getDisabledStateForElementIndex: (index) => {\n                const item = this.items[index];\n                if (!item) {\n                    return false;\n                }\n                return item.disabled;\n            },\n            setSelectedStateForElementIndex: (index, value) => {\n                const item = this.items[index];\n                if (!item) {\n                    return;\n                }\n                item.selected = value;\n            },\n            getSelectedStateForElementIndex: (index) => {\n                const item = this.items[index];\n                if (!item) {\n                    return false;\n                }\n                return item.selected;\n            },\n            setActivatedStateForElementIndex: (index, value) => {\n                const item = this.items[index];\n                if (!item) {\n                    return;\n                }\n                item.activated = value;\n            },\n        };\n        return this.mdcAdapter;\n    }\n    selectUi(index, activate = false) {\n        const item = this.items[index];\n        if (item) {\n            item.selected = true;\n            item.activated = activate;\n        }\n    }\n    deselectUi(index) {\n        const item = this.items[index];\n        if (item) {\n            item.selected = false;\n            item.activated = false;\n        }\n    }\n    select(index) {\n        if (!this.mdcFoundation) {\n            return;\n        }\n        this.mdcFoundation.setSelectedIndex(index);\n    }\n    toggle(index, force) {\n        this.mdcFoundation.toggleMultiAtIndex(index, force);\n    }\n    onSlotChange() {\n        this.layout();\n    }\n    onListItemConnected(e) {\n        const target = e.target;\n        this.layout(this.items.indexOf(target) === -1);\n    }\n    layout(updateItems = true) {\n        if (updateItems) {\n            this.updateItems();\n        }\n        if (!this.noninteractive) {\n            let first = null;\n            for (const item of this.items) {\n                if (!first && !item.noninteractive) {\n                    first = item;\n                }\n                item.tabindex = -1;\n            }\n            if (first) {\n                first.tabindex = 0;\n            }\n        }\n    }\n    focus() {\n        const root = this.mdcRoot;\n        if (root) {\n            root.focus();\n        }\n    }\n    blur() {\n        const root = this.mdcRoot;\n        if (root) {\n            root.blur();\n        }\n    }\n}\n__decorate([\n    query('.mdc-list')\n], ListBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('slot')\n], ListBase.prototype, \"slotElement\", void 0);\n__decorate([\n    property({ type: Boolean }),\n    observer(function (value) {\n        if (this.mdcFoundation) {\n            this.mdcFoundation.setUseActivatedClass(value);\n        }\n    })\n], ListBase.prototype, \"activatable\", void 0);\n__decorate([\n    property({ type: Boolean }),\n    observer(function (newValue, oldValue) {\n        if (this.mdcFoundation) {\n            this.mdcFoundation.setMulti(newValue);\n        }\n        if (oldValue !== undefined) {\n            this.layout();\n        }\n    })\n], ListBase.prototype, \"multi\", void 0);\n__decorate([\n    property({ type: Boolean }),\n    observer(function (value) {\n        if (this.mdcFoundation) {\n            this.mdcFoundation.setWrapFocus(value);\n        }\n    })\n], ListBase.prototype, \"wrapFocus\", void 0);\n__decorate([\n    property({ type: String }),\n    observer(function (_newValue, oldValue) {\n        if (oldValue !== undefined) {\n            this.updateItems();\n        }\n    })\n], ListBase.prototype, \"itemRoles\", void 0);\n__decorate([\n    property({ type: String })\n], ListBase.prototype, \"innerRole\", void 0);\n__decorate([\n    property({ type: Boolean })\n], ListBase.prototype, \"rootTabbable\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true }),\n    observer(function (value) {\n        const slot = this.slotElement;\n        if (value && slot) {\n            const tabbable = findAssignedElement(slot, '[tabindex=\"0\"]');\n            this.previousTabindex = tabbable;\n            if (tabbable) {\n                tabbable.setAttribute('tabindex', '-1');\n            }\n        }\n        else if (!value && this.previousTabindex) {\n            this.previousTabindex.setAttribute('tabindex', '0');\n            this.previousTabindex = null;\n        }\n    })\n], ListBase.prototype, \"noninteractive\", void 0);\n//# sourceMappingURL=mwc-list-base.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `@keyframes mdc-ripple-fg-radius-in{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}}@keyframes mdc-ripple-fg-opacity-in{from{animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity, 0)}}@keyframes mdc-ripple-fg-opacity-out{from{animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity, 0)}to{opacity:0}}:host{display:block}.mdc-list{font-family:Roboto, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-size:1rem;line-height:1.75rem;font-weight:400;letter-spacing:.009375em;text-decoration:inherit;text-transform:inherit;line-height:1.5rem;margin:0;padding:8px 0;list-style-type:none;color:rgba(0,0,0,.87);color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));padding:var(--mdc-list-vertical-padding, 8px) 0}.mdc-list:focus{outline:none}.mdc-list-item{height:48px}.mdc-list--dense{padding-top:4px;padding-bottom:4px;font-size:.812rem}.mdc-list ::slotted([divider]){height:0;margin:0;border:none;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgba(0,0,0,.12)}.mdc-list ::slotted([divider][padded]){margin:0 var(--mdc-list-side-padding, 16px)}.mdc-list ::slotted([divider][inset]){margin-left:var(--mdc-list-inset-margin, 72px);margin-right:0;width:calc(100% - var(--mdc-list-inset-margin, 72px))}.mdc-list-group[dir=rtl] .mdc-list ::slotted([divider][inset]),[dir=rtl] .mdc-list-group .mdc-list ::slotted([divider][inset]){margin-left:0;margin-right:var(--mdc-list-inset-margin, 72px)}.mdc-list ::slotted([divider][inset][padded]){width:calc(100% - var(--mdc-list-inset-margin, 72px) - var(--mdc-list-side-padding, 16px))}.mdc-list--dense ::slotted([mwc-list-item]){height:40px}.mdc-list--dense ::slotted([mwc-list]){--mdc-list-item-graphic-size: 20px}.mdc-list--two-line.mdc-list--dense ::slotted([mwc-list-item]),.mdc-list--avatar-list.mdc-list--dense ::slotted([mwc-list-item]){height:60px}.mdc-list--avatar-list.mdc-list--dense ::slotted([mwc-list]){--mdc-list-item-graphic-size: 36px}:host([noninteractive]){pointer-events:none;cursor:default}.mdc-list--dense ::slotted(.mdc-list-item__primary-text){display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list--dense ::slotted(.mdc-list-item__primary-text)::before{display:inline-block;width:0;height:24px;content:\"\";vertical-align:0}.mdc-list--dense ::slotted(.mdc-list-item__primary-text)::after{display:inline-block;width:0;height:20px;content:\"\";vertical-align:-20px}`;\n//# sourceMappingURL=mwc-list-css.js.map","/**\n@license\nCopyright 2020 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit-element';\nimport { ListBase } from './mwc-list-base.js';\nimport { style } from './mwc-list-css.js';\nexport { createSetFromIndex, isEventMulti, isIndexSet } from './mwc-list-foundation';\nlet List = class List extends ListBase {\n};\nList.styles = style;\nList = __decorate([\n    customElement('mwc-list')\n], List);\nexport { List };\n//# sourceMappingURL=mwc-list.js.map"],"names":["matches","element","selector","webkitMatchesSelector","msMatchesSelector","call","isNodeElement","node","nodeType","Node","ELEMENT_NODE","fn","optionsBlock","passive","document","addEventListener","removeEventListener","deepActiveElementPath","doc","window","activeElement","path","push","shadowRoot","BaseElement","LitElement","[object Object]","undefined","this","mdcFoundation","destroy","mdcFoundationClass","createAdapter","init","createFoundation","MDCFoundation","adapter","adapter_","Object","defineProperty","get","enumerable","configurable","prototype","cssClasses","strings","ACTION_EVENT","ARIA_CHECKED","ARIA_CHECKED_CHECKBOX_SELECTOR","ARIA_CHECKED_RADIO_SELECTOR","ARIA_CURRENT","ARIA_DISABLED","ARIA_ORIENTATION","ARIA_ORIENTATION_HORIZONTAL","ARIA_ROLE_CHECKBOX_SELECTOR","ARIA_SELECTED","CHECKBOX_RADIO_SELECTOR","CHECKBOX_SELECTOR","CHILD_ELEMENTS_TO_TOGGLE_TABINDEX","FOCUSABLE_CHILD_ELEMENTS","RADIO_SELECTOR","numbers","UNSET_INDEX","ELEMENTS_KEY_ALLOWED_IN","isIndexSet","selectedIndex","Set","isEventMulti","evt","detail","index","createSetFromIndex","entry","MDCListFoundation","super","assign","defaultAdapter","isMulti_","wrapFocus_","isVertical_","selectedIndex_","focusedItemIndex_","useActivatedClass_","ariaCurrentAttrValue_","focusItemAtIndex","getFocusedElementIndex","getListItemCount","isFocusInsideList","isRootFocused","notifyAction","notifySelected","getSelectedStateForElementIndex","setDisabledStateForElementIndex","getDisabledStateForElementIndex","setSelectedStateForElementIndex","setActivatedStateForElementIndex","setTabIndexForElementIndex","setAttributeForElementIndex","getAttributeForElementIndex","value","useActivated","isIndexValid_","setMultiSelectionAtIndex_","setSingleSelectionAtIndex_","_","listItemIndex","setTimeout","setTabindexToFirstSelectedItem_","isRootListItem","isArrowLeft","key","keyCode","isArrowUp","isArrowRight","isArrowDown","isHome","isEnd","isEnter","isSpace","preventDefault","focusLastElement","focusFirstElement","nextIndex","currentIndex","preventDefaultEvent_","focusNextElement","focusPrevElement","target","tagName","setSelectedIndexOnAction_","setTabindexAtIndex_","force","prevIndex","lastIndex","itemIndex","isEnabled","toLowerCase","indexOf","setAriaForSingleSelectionAtIndex_","newIndex","diff","oldSet","newSet","oldArr","Array","from","newArr","added","removed","oldSorted","sort","newSorted","i","j","length","oldVal","newVal","findIndexDiff","isAriaCurrent","ariaAttribute","ariaAttributeValue","targetIndex","size","Math","min","Error","isOneInRange","isIndexInRange_","listSize","checkedIndex","toggleMultiAtIndex","newSelectionValue","add","delete","isListItem","hasAttribute","ListBase","arguments","mdcAdapter","activatable","multi","wrapFocus","itemRoles","innerRole","rootTabbable","previousTabindex","noninteractive","items_","assignedElements","slot","slotElement","assignedNodes","flatten","filter","items","nodes","listItems","setAttribute","selectedIndices","forEach","item","removeAttribute","selected","select","entries","next","getSelectedIndex","role","tabindex","html","ifDefined","onKeydown","onFocusIn","onFocusOut","onRequestSelected","onSlotChange","onListItemConnected","mdcRoot","getIndexOfTarget","handleFocusIn","handleFocusOut","handleKeydown","disabled","handleSingleSelection","stopPropagation","elements","composedPath","pathItem","activeElementPath","activeItem","attr","getAttribute","val","focus","bubbles","composed","ev","CustomEvent","dispatchEvent","activePath","deepActiveElement","focusEv","Event","listener","body","doesElementContainFocus","getRootNode","activated","activate","setSelectedIndex","layout","e","updateItems","first","root","blur","__decorate","query","property","type","Boolean","observer","setUseActivatedClass","newValue","oldValue","setMulti","setWrapFocus","String","_newValue","reflect","tabbable","el","findAssignedElement","style","css","List","styles","customElement"],"mappings":"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"}